continue
ChannelMember.destroy(params[:id])
params[:id]
continue
Post.destroy(params[:id])
continue
Post.destroy(params[:id])
continue
Post.destroy(params[:id])
Post.find(10)
params[:id]
continue
Like.destroy(5)
Post.first.likes
Dislike.all
DIslike.all
Dislike.destroy(1)
Post.first.dislikes.each{|like| puts like.user_id}
Post.first.likes.each{|like| puts like.user_id}
like.save
like
User.first.dislikes
current_user.id
User.first.likes
Like.all
like.save
like
continue
like_params
current_user
continue
channel.owners
channel.owner
channel_owner
continue
channel
continue
channel
continue
Like.find(params[:id])
continue
Like.find(params[:id])
continue
Like.find(9)
params[:id]
continue
Like.find(6)
Like.all
Like.destroy('6')
params[:id]
continue
user.likes
user = User.all.find(like_params[:user_id])
User.all.find(like_params[:user_id])
user = User.all.find(like_params.user_id)
like_params
user_params
continue
Dislike.all
Dislike.destroy(3)
Dislike.all
dislike
dislike.save
dislike
dislike = Dislike.new(dislike_params)
dislike_params
continue
post = Post.find(params[:id])
continue
post = Post.find(params[:id])
continue
post
continue
post
continue
post.user_id == current_user.id
current_user.id
post.user_id
exit
post.id == current_user.id
post.user_id
current_user.id
continue
post_params
post = Post.find(params[:id])
continue
post.save
post.content
post = Post.find(params[:id])
Post.find(params[:id])
post.update_attributes(post_params)
post_params
post = Post.find(params[:id])
current_user.id
continue
token
continue
post
post.user_id = current_user.id
continue
post.save
post
post.user_id = current_user.id
current_user.id
current_user
post
continue
post
post[:user_id] = user[:id]
post
user = User.find(user_id[0]["user_id"])
user_id = JWT.decode(token,'SUPER_SECRET_KEY')
token
token = request.headers['Auth-Key']
post
continue
token = request.headers['Auth-Key']
request.headers['Auth-Key']
current_user
post
